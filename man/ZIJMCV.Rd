% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ZIJMCV.R
\name{ZIJMCV}
\alias{ZIJMCV}
\title{Zero-inflation joint modeling}
\usage{
ZIJMCV(
  FixedY,
  RandomY,
  GroupY,
  FixedZ,
  RandomZ,
  GroupZ,
  formSurv,
  dataLong,
  dataSurv,
  obstime = "obstime",
  id = "id",
  n.chains = n.chains,
  n.iter = n.iter,
  n.burnin = n.burnin,
  n.thin = n.thin,
  K = 15,
  family = "Poisson"
)
}
\arguments{
\item{FixedY}{formula for fixed part of longitudinal count model}

\item{RandomY}{formula for random part of longitudinal count model}

\item{GroupY}{formula specifying the cluster variable for Y (e.g. = ~ subject)}

\item{FixedZ}{formula for fixed part of longitudinal probability model}

\item{RandomZ}{formula for random part of longitudinal probability model}

\item{GroupZ}{formula specifying the cluster variable for Z (e.g. = ~ subject)}

\item{formSurv}{formula for survival model}

\item{dataLong}{data set of observed longitudinal variables.}

\item{dataSurv}{data set of observed survival variables.}

\item{obstime}{the observed time in longitudinal data}

\item{id}{the id variable in longitudinal data}

\item{n.chains}{the number of parallel chains for the model; default is 1.}

\item{n.iter}{integer specifying the total number of iterations; default is 1000.}

\item{n.burnin}{integer specifying how many of n.iter to discard as burn-in ; default is 5000.}

\item{n.thin}{integer specifying the thinning of the chains; default is 1.}

\item{K}{Number of nodes and weights for calculating Gaussian quadrature}

\item{family}{Family objects provide a convenient way to specify the details of the models. They cover various distributions like "Gaussian", "Exponential", "Weibull", "Gamma", "Beta", "inverse.gaussian", "Poisson", "NB", "Logarithmic", "Bell", "GP", and "Binomial". Specifically, "NB" and "GP" are tailored for hurdle negative binomial and hurdle generalized Poisson joint models, respectively, while the others are utilized for the corresponding models based on their names.}
}
\value{
\itemize{
\item mu.vect list of posterior mean for each parameter
\item sd.vect list of standard error for each parameter
\item 2.5\% list of posterior mode for each parameter
\item 97.5\% list of posterior median for each parameter
\item Rhat Gelman and Rubin diagnostic for all parameter
\item betaL1 the regression coefficients of rate of the hurdle model
\item betaL2 the regression coefficients of probability of the hurdle model
\item betaS the regression coefficients of the survival model
\item Sigmaa the variance of random effects of the rate
\item Sigmab the variance of random effects of the probability
\item gamma_pi the association parameter for linear predictor of the current value of the probability
\item gamma_lambda the association parameter for linear predictor of the current value of the rate
\item h the parameters of the piecewise constant baseline hazard
}
}
\description{
Fits zero-inflated hurdle joint modeling with a proportional hazard sub-model and a piecewise constant baseline hazard, considering associations based on the current values. This function accommodates various distributional assumptions, including Gaussian, Gamma, inverse Gaussian, Weibull, exponential, beta, Poisson, negative binomial, logarithmic, Bell, generalized Poisson, and binomial.
}
\details{
Function using 'JAGS' software to estimate the hurdle joint modeling
}
\examples{
library(survival)


\donttest{
  data(long_data_p)
  data(surv_data_p)

Z1 <- ZIJMCV(
  FixedY = Y1 ~ obstime + x1 + x2 , RandomY = ~obstime, GroupY = ~id,
  FixedZ = ~ obstime + x1, RandomZ = ~obstime, GroupZ = ~id,
  formSurv = survival::Surv(survtime, death) ~ w1+w2,
  dataLong = long_data_p, dataSurv = surv_data_p,
  obstime = "obstime", id = "id",
  n.chains = 1,
  n.iter = 1000, n.burnin = 500, n.thin = 1, K = 15, family = "Poisson"
)



Z2 <- ZIJMCV(
  FixedY = Y1 ~ obstime + x1 + x2 , RandomY = ~obstime, GroupY = ~id,
  FixedZ = ~ obstime + x1, RandomZ = ~obstime, GroupZ = ~id,
  formSurv = survival::Surv(survtime, death) ~ w1+w2,
  dataLong = long_data_p, dataSurv = surv_data_p,
  obstime = "obstime", id = "id",
  n.chains = 2,
  n.iter = 100, n.burnin = 50, n.thin = 1, K = 15, family = "NB"
)

data(long_data_nb)
data(surv_data_nb)

Z1 <- ZIJMCV(
  FixedY = Y1 ~ obstime + x1 + x2 , RandomY = ~obstime, GroupY = ~id,
  FixedZ = ~ obstime + x1, RandomZ = ~obstime, GroupZ = ~id,
  formSurv = survival::Surv(survtime, death) ~ w1+w2,
  dataLong = long_data_nb, dataSurv = surv_data_nb,
  obstime = "obstime", id = "id",
  n.chains = 2,
  n.iter = 100, n.burnin = 50, n.thin = 1, K = 15, family = "Poisson"
)



  Z2 <- ZIJMCV(
  FixedY = Y1 ~ obstime + x1 + x2 , RandomY = ~obstime, GroupY = ~id,
  FixedZ = ~ obstime + x1, RandomZ = ~obstime, GroupZ = ~id,
  formSurv = Surv(survtime, death) ~ w1+w2,
  dataLong = long_data_nb, dataSurv = surv_data_nb,
  obstime = "obstime", id = "id", n.chains = 2,
  n.iter = 1000, n.burnin = 500, n.thin = 1, K = 15, family = "NB"
)




Z3 <- ZIJMCV(
  FixedY = Y1 ~ obstime + x1 + x2 , RandomY = ~obstime, GroupY = ~id,
  FixedZ = ~ obstime + x1, RandomZ = ~obstime, GroupZ = ~id,
  formSurv = Surv(survtime, death) ~ w1+w2,
  dataLong = long_data_nb, dataSurv = surv_data_nb,
  obstime = "obstime", id = "id",
  n.chains = 1,
  n.iter = 100, n.burnin = 50, n.thin = 1, K = 15, family = "GP"
)



Z4 <- ZIJMCV(
  FixedY = Y1 ~ obstime + x1 + x2 , RandomY = ~obstime, GroupY = ~id,
  FixedZ = ~ obstime + x1, RandomZ = ~obstime, GroupZ = ~id,
  formSurv = Surv(survtime, death) ~ w1+w2,
  dataLong = long_data_nb, dataSurv = surv_data_nb,
  obstime = "obstime", id = "id",
  n.chains = 2,
  n.iter = 100, n.burnin = 50, n.thin = 1, K = 15, family = "Bell"
)


Z5 <- ZIJMCV(
  FixedY = Y1 ~ obstime + x1 + x2 , RandomY = ~obstime, GroupY = ~id,
  FixedZ = ~ obstime + x1, RandomZ = ~obstime, GroupZ = ~id,
  formSurv = Surv(survtime, death) ~ w1+w2,
  dataLong = long_data_nb, dataSurv = surv_data_nb,
  obstime = "obstime", id = "id",
  n.chains = 2,
  n.iter = 100, n.burnin = 50, n.thin = 1, K = 15, family = "Logarithmic"
)

Z6 <- ZIJMCV(
  FixedY = Y1 ~ obstime + x1 + x2 , RandomY = ~obstime, GroupY = ~id,
  FixedZ = ~ obstime + x1, RandomZ = ~obstime, GroupZ = ~id,
  formSurv = Surv(survtime, death) ~ w1+w2,
  dataLong = long_data_nb, dataSurv = surv_data_nb,
  obstime = "obstime", id = "id",
  n.chains = 2,
  n.iter = 100, n.burnin = 50, n.thin = 1, K = 15, family = "binomial"
)

}



\donttest{
  data(long_data_n)
  data(surv_data_n)

  Z1 <- ZIJMCV(
    FixedY = Y1 ~ obstime + x1 + x2 , RandomY = ~obstime, GroupY = ~id,
    FixedZ = ~ obstime + x1, RandomZ = ~obstime, GroupZ = ~id,
    formSurv = survival::Surv(survtime, death) ~ w1+w2,
    dataLong = long_data_n, dataSurv = surv_data_n,
    obstime = "obstime", id = "id",
    n.chains = 2,
    n.iter = 1000, n.burnin = 500, n.thin = 1, K = 15, family = "Gaussian"
  )

  data(long_data_e)
  data(surv_data_e)

  Z2 <- ZIJMCV(
    FixedY = Y1 ~ obstime + x1 + x2 , RandomY = ~obstime, GroupY = ~id,
    FixedZ = ~ obstime + x1, RandomZ = ~obstime, GroupZ = ~id,
    formSurv = survival::Surv(survtime, death) ~ w1,
    dataLong = long_data_e, dataSurv = surv_data_e,
    obstime = "obstime", id = "id",
    n.chains = 2,
    n.iter = 100, n.burnin = 50, n.thin = 1, K = 15, family = "inverse.gaussian"
  )



    Z2 <- ZIJMCV(
    FixedY = Y1 ~ obstime + x1 + x2 , RandomY = ~obstime, GroupY = ~id,
    FixedZ = ~ obstime + x1, RandomZ = ~obstime, GroupZ = ~id,
    formSurv = survival::Surv(survtime, death) ~ w1+w2,
    dataLong = long_data_e, dataSurv = surv_data_e,
    obstime = "obstime", id = "id",
    n.chains = 2,
    n.iter = 1000, n.burnin = 500, n.thin = 1, K = 15, family = "Exponential"
  )


    Z3 <- ZIJMCV(
      FixedY = Y1 ~ obstime + x1 + x2 , RandomY = ~obstime, GroupY = ~id,
      FixedZ = ~ obstime + x1, RandomZ = ~obstime, GroupZ = ~id,
      formSurv = survival::Surv(survtime, death) ~ w1+w2,
      dataLong = long_data_e, dataSurv = surv_data_e,
      obstime = "obstime", id = "id",
      n.chains = 2,
      n.iter = 1000, n.burnin = 500, n.thin = 1, K = 15, family = "Weibull"
    )


    Z3 <- ZIJMCV(
      FixedY = Y1 ~ obstime + x1 + x2 , RandomY = ~obstime, GroupY = ~id,
      FixedZ = ~ obstime + x1, RandomZ = ~obstime, GroupZ = ~id,
      formSurv = survival::Surv(survtime, death) ~ w1+w2,
      dataLong = long_data_e, dataSurv = surv_data_e,
      obstime = "obstime", id = "id",
      n.chains = 2,
      n.iter = 1000, n.burnin = 500, n.thin = 1, K = 15, family = "Gamma"
    )


    Z4 <- ZIJMCV(
      FixedY = Y1 ~ obstime + x1 + x2 , RandomY = ~obstime, GroupY = ~id,
      FixedZ = ~ obstime + x1, RandomZ = ~obstime, GroupZ = ~id,
      formSurv = survival::Surv(survtime, death) ~ w1+w2,
      dataLong = long_data_b, dataSurv = surv_data_b,
      obstime = "obstime", id = "id",
      n.chains = 2,
      n.iter = 1000, n.burnin = 500, n.thin = 1, K = 15, family = "Beta"
    )
  }
}
\author{
Taban Baghfalaki \email{t.baghfalaki@gmail.com}, Mojtaba Ganjali \email{m-ganjali@sbu.ac.ir}
}
